name: $(Package.Version)

trigger: none
pr: none

variables:
  - group: 'Build Configuration'
  # Always use fixed version for .NET Core SDK
  - name: 'DotNet.Sdk.Version'
    value: '2.2.105'
  - name: 'Project'
    value: 'Arcus.DevOps.Templates'
  - name: 'Arcus_DevOps_Templates_TestValue'
    value: 'Replace token with me!'
  # 'Package.Version' is added as queue-time variable on build in Azure DevOps

stages:
  - stage: Build
    jobs:
      - job: Compile
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - template: ./../../build/build-solution.yml
            parameters:
              dotnetSdkVersion: '$(DotNet.Sdk.Version)'
              version: $(Build.BuildNumber)
          - task: CopyFiles@2
            displayName: 'Copy build artifacts'
            inputs:
              contents: '**/?(bin|obj)/**'
              targetFolder: '$(Pipeline.Workspace)/build'
          - task: PublishPipelineArtifact@0
            displayName: 'Publish build artifacts'
            inputs:
              targetPath: '$(Pipeline.Workspace)/build'
              artifactName: Build

  - stage: UnitTests
    displayName: Unit Tests
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: UnitTests
        displayName: 'Run unit tests'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download build artifacts'
            inputs:
              artifact: 'Build'
              path: '$(Build.SourcesDirectory)'
          - template: ./../../test/run-unit-tests.yml
            parameters:
              dotnetSdkVersion: '$(DotNet.Sdk.Version)'
              projectName: '$(Project).Tests.Unit'

  - stage: IntegrationTests
    displayName: Integration Tests
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: IntegrationTests
        displayName: 'Run integration tests'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download build artifacts'
            inputs:
              artifact: 'Build'
              path: '$(Build.SourcesDirectory)'
          - template: ./../../test/run-integration-tests.yml
            parameters:
              dotnetSdkVersion: '$(DotNet.Sdk.Version)'
              projectName: '$(Project).Tests.Integration'

  - stage: Release
    displayName: 'Release to GitHub'
    dependsOn: IntegrationTests
    condition: succeeded()
    jobs:
      - job: ReleaseToGitHub
        displayName: 'Release to GitHub'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download build artifacts'
            inputs:
              artifact: 'Build'
              path: '$(Build.SourcesDirectory)'
          - template: ./../../github/create-release.yml
            parameters:
              repositoryName: 'arcus-azure/azure-devops-templates-tests'
              releaseNotes: |
                Nevermind this full-release notes.
                ```
          - template: ./../../github/create-pre-release.yml
            parameters:
              repositoryName: 'arcus-azure/arcus.messaging'
              releaseNotes: |
                Nevermind this pre-release notes.
                ```
